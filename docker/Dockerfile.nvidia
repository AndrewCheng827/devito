##############################################################
# This Dockerfile contains NVIDIA HPC SDK (nvc, cuda, OpenMPI) for Devito
##############################################################
#FROM python:3.9 
FROM python:3.9-slim-bullseye 
 
ENV DEBIAN_FRONTEND noninteractive 
  
# nodesource: nvdashboard requires nodejs>=10  
RUN echo 'deb [trusted=yes] https://developer.download.nvidia.com/hpc-sdk/ubuntu/amd64 /' > /etc/apt/sources.list.d/nvhpc.list
RUN apt-get update -y && apt-get install -y -q apt-utils curl wget vim

RUN curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
    apt-get install -y -q \
        liblapack-dev libblas-dev \
        libibverbs-dev libmlx4-1 libmlx5-1 ibutils \
        nodejs ffmpeg \
        texlive-latex-extra texlive-fonts-recommended dvipng cm-super

#Â Install latest available nvhpc
RUN ver=$(apt-cache show nvhpc | grep Source | awk '{print $2}') && apt-get install -y -q $(ver)

RUN wget -q -P /app/nvcomp_exts/ http://developer.download.nvidia.com/compute/nvcomp/2.2/local_installers/nvcomp_exts_x86_64_ubuntu18.04-2.2.tar.gz && \
    tar -xvf /app/nvcomp_exts/nvcomp_exts_x86_64_ubuntu18.04-2.2.tar.gz -C /app/nvcomp_exts && \
    apt-get update -y && \
    apt-get autoclean && \
    apt-get autoremove && \
    rm -rf /app/nvcomp_exts/nvcomp* && \
    rm -rf /var/lib/apt/lists/*

ARG HPCSDK_HOME=/opt/nvidia/hpc_sdk/Linux_x86_64/2022
ARG HPCSDK_CUPTI=/opt/nvidia/hpc_sdk/Linux_x86_64/2022/cuda/11.6/extras/CUPTI
#MPI_VER options 3,4,HPCX
ARG MPI_VER=HPCX

# nvidia-container-runtime
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES compute,utility

# required for nvidia-docker v1
RUN echo "$HPCSDK_HOME/cuda/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_HOME/cuda/lib64" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_HOME/compilers/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_HOME/comm_libs/mpi/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_CUPTI/lib64" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "$HPCSDK_HOME/math_libs/lib64" >> /etc/ld.so.conf.d/nvidia.conf    

# Compression
ENV NVCOMP_EXTS_ROOT /app/nvcomp_exts/ubuntu18.04/11.6
ENV bitcomp_DIR $NVCOMP_EXTS_ROOT/lib/
    
# Compiler, CUDA, and Library paths
ENV CUDA_HOME $HPCSDK_HOME/cuda
ENV CUDA_ROOT $HPCSDK_HOME/cuda/bin
ENV PATH $HPCSDK_HOME/compilers/bin:$HPCSDK_HOME/cuda/bin:$HPCSDK_HOME/comm_libs/mpi/bin:${PATH}
ENV LD_LIBRARY_PATH $HPCSDK_HOME/cuda/lib:$HPCSDK_HOME/cuda/lib64:$HPCSDK_HOME/compilers/lib:$HPCSDK_HOME/math_libs/lib64:$HPCSDK_HOME/comm_libs/mpi/lib:$HPCSDK_CUPTI/lib64:bitcomp_DIR:${LD_LIBRARY_PATH}

# MPI ROOT USER DEFAULTS
ENV OMPI_ALLOW_RUN_AS_ROOT=1
ENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
ENV OMPI_MCA_rmaps_base_oversubscribe=1
ENV OMPI_MCA_btl_base_warn_component_unused=0
ENV UCX_MEMTYPE_CACHE=no
ENV UCX_NET_DEVICES=all
ENV UCX_SHM_DEVICES=all
ENV UCX_ACC_DEVICES=all
ENV NCCL_UCX_RNDV_THRESH=0
ENV NCCL_UCX_RNDV_SCHEME=get_zcopy
ENV NCCL_PLUGIN_P2P=ucx
ENV MELLANOX_MOUNT_DRIVER=1

ENV UCX_TLS=rc_x,sm,shm,cuda_copy,gdr_copy,cuda_ipc
#For virtual environments and cloud
#ENV UCX_TLS=sm,shm,cuda_copy,cuda_ipc

ENV CPATH $HPCSDK_HOME/comm_libs/mpi/include:${CPATH}

#MPI 3
# Do Nothing
RUN if [ "x$MPI_VER" = "x4" ]; then \
        rm -f  $HPCSDK_HOME/comm_libs/mpi && \
        ln -sf $HPCSDK_HOME/comm_libs/openmpi4/openmpi-4.0.5 \
               $HPCSDK_HOME/comm_libs/mpi ; \
    fi;  \
    if [ "x$MPI_VER" = "HPCX" ]; then \
        rm -f  $HPCSDK_HOME/comm_libs/mpi && \
        ln -sf $HPCSDK_HOME/comm_libs/hpcx/latest/ompi \
               $HPCSDK_HOME/comm_libs/mpi ; \
    fi;

# Make devito env vars file
RUN echo '#!/usr/bin/env bash' > /app/setup-devito-env.sh && \
    echo 'export DEVITO_ARCH="nvc"' >> /app/setup-devito-env.sh && \
    echo 'export DEVITO_PLATFORM="nvidiaX"' >> /app/setup-devito-env.sh && \
    echo 'export DEVITO_LANGUAGE="openacc"' >> /app/setup-devito-env.sh

# Install python nvidia dependencies
RUN /venv/bin/pip install --no-cache-dir --no-cache-dir --upgrade pip && \
    /venv/bin/pip install --no-cache-dir --no-cache-dir -r https://raw.githubusercontent.com/devitocodes/devito/master/requirements-nvidia.txt

ENV CFLAGS=-noswitcherror 

EXPOSE 8888
CMD ["/bin/bash"]
